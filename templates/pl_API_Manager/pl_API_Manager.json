{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name"
		},
		"ls_azure_sqldb": {
			"type": "string"
		},
		"ls_fusedata_AzureKeyVault": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_API_Manager')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Listing survey responses from delighted rest api",
				"activities": [
					{
						"name": "check_load_type_Is_delta",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Saving API-Key",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(\n    or(\n        or(\n        or(equals('y',pipeline().parameters.is_delta_load),equals('Y',pipeline().parameters.is_delta_load)),\n        or(equals('yes',pipeline().parameters.is_delta_load),equals('YES',pipeline().parameters.is_delta_load))\n        ),\n        or(\n        or(equals('t',pipeline().parameters.is_delta_load),equals('T',pipeline().parameters.is_delta_load)),\n        or(equals('ture',pipeline().parameters.is_delta_load),equals('TURE',pipeline().parameters.is_delta_load))\n        )\n    )\n, equals(1, '1')\n)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Execute_period_load_survey",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "period_until_date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_delighted_period_survey",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_ps_src_start_date": {
												"value": "@variables('var_m_period_start_survey_timestamp')",
												"type": "Expression"
											},
											"par_ps_src_until_date": {
												"value": "@variables('var_m_period_until_survey_timestamp')",
												"type": "Expression"
											},
											"par_ps_src_endpoint": {
												"value": "@pipeline().parameters.par_m_init_endpoint",
												"type": "Expression"
											},
											"par_ps_receiver": {
												"value": "@pipeline().parameters.par_m_receiver",
												"type": "Expression"
											},
											"par_ps_cc": {
												"value": "@pipeline().parameters.par_m_cc",
												"type": "Expression"
											},
											"par_ps_API_Key": {
												"value": "@variables('var_m_API-Key')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "period_start_date",
									"description": "load delighted survey data from this date at 12:00 AM",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_m_start_delta_people_timestamp",
										"value": {
											"value": "@string(\ndiv(sub(ticks(convertToUtc(pipeline().parameters.par_m_start_date, 'Eastern Standard Time')), ticks('1970-01-01')),10000000)\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "period_until_date",
									"description": "period load until this date at 11:59 PM",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "period_start_date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_m_period_until_people_timestamp",
										"value": {
											"value": "@string(\nadd(86390,div(sub(ticks(convertToUtc(pipeline().parameters.par_m_until_date, 'Eastern Standard Time')), ticks('1970-01-01')),10000000))\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Execute_period_load_people",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "period_until_date",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_delighted_period_People",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_init_endpoint": {
												"value": "@pipeline().parameters.par_m_init_endpoint",
												"type": "Expression"
											},
											"receiver": {
												"value": "@pipeline().parameters.par_m_receiver",
												"type": "Expression"
											},
											"cc": {
												"value": "@pipeline().parameters.par_m_cc",
												"type": "Expression"
											},
											"par_p_start_date": {
												"value": "@variables('var_m_period_start_people_timestamp')",
												"type": "Expression"
											},
											"par_p_until_date": {
												"value": "@variables('var_m_period_until_people_timestamp')",
												"type": "Expression"
											},
											"par_p_API_Key": {
												"value": "@variables('var_m_API-Key')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "force init_until_date_timestamp",
									"description": "init_until_date_timestamp to current timestamp",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "period_until_date",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_m_until_delta_people_timestamp",
										"value": {
											"value": "@{div(sub(ticks(utcNow()), ticks('1970-01-01')),10000000)}",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Execute_period_load_survey_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "force init_until_date_timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_delighted_period_survey",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_ps_src_start_date": {
												"value": "@variables('var_m_period_start_survey_timestamp')",
												"type": "Expression"
											},
											"par_ps_src_until_date": {
												"value": "@variables('var_m_period_until_survey_timestamp')",
												"type": "Expression"
											},
											"par_ps_src_endpoint": {
												"value": "@pipeline().parameters.par_m_init_endpoint",
												"type": "Expression"
											},
											"par_ps_receiver": {
												"value": "@pipeline().parameters.par_m_receiver",
												"type": "Expression"
											},
											"par_ps_cc": {
												"value": "@pipeline().parameters.par_m_cc",
												"type": "Expression"
											},
											"par_ps_API_Key": {
												"value": "@variables('var_m_API-Key')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Execute_period_load_people_copy1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "force init_until_date_timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_delighted_period_People",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_init_endpoint": {
												"value": "@pipeline().parameters.par_m_init_endpoint",
												"type": "Expression"
											},
											"receiver": {
												"value": "@pipeline().parameters.par_m_receiver",
												"type": "Expression"
											},
											"cc": {
												"value": "@pipeline().parameters.par_m_cc",
												"type": "Expression"
											},
											"par_p_start_date": {
												"value": "@variables('var_m_period_start_people_timestamp')",
												"type": "Expression"
											},
											"par_p_until_date": {
												"value": "@variables('var_m_period_until_people_timestamp')",
												"type": "Expression"
											},
											"par_p_API_Key": {
												"value": "@variables('var_m_API-Key')",
												"type": "Expression"
											}
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "lkp_last_success_load_survey",
									"description": "logged created date will be added one day as the new loading start date.",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "SELECT top 1 \n       [pl_load_start_datetime_EST]\n      ,[pl_load_start_timestamp]\n      ,[pl_load_start_datetime_UTC]\n      ,[pl_load_until_datetime_EST]\n      ,[pl_load_until_timestamp]\n      ,[pl_load_until_datetime_UTC]\n\t  ,[pl_next_delta_datetime_EST]\n      ,[pl_next_delta_timestamp]\n      ,[pl_next_delta_datetime_UTC]\n\t  ,[pl_created_datetime_EST]\n      ,[pl_Created_timestamp]\n      ,[pl_created_datetime_UTC]\n  FROM [land].[pipeline_activity_log]\n  where [pl_category] = 'survey' and [pl_status]  = 1 and pl_load_type = 'delta'\n  order by [pl_log_id] desc \n",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_src_land_sql_log",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "delta_survey_start_timestamp",
									"description": "last success load plus 1 second as new load start.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "delta_survey_start_datetime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_m_start_delta_survey_timestamp",
										"value": {
											"value": "@string(\nactivity('lkp_last_success_load_survey').output.firstRow.pl_load_until_timestamp\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "lkp_last_success_load_people",
									"description": "logged created date will be added one day as the new loading start date.",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "SELECT TOP 1\n       [pl_load_start_datetime_EST]\n      ,[pl_load_start_timestamp]\n      ,[pl_load_start_datetime_UTC]\n      ,[pl_load_until_datetime_EST]\n      ,[pl_load_until_timestamp]\n      ,[pl_load_until_datetime_UTC]\n\t  ,[pl_next_delta_datetime_EST]\n      ,[pl_next_delta_timestamp]\n      ,[pl_next_delta_datetime_UTC]\n\t  ,[pl_created_datetime_EST]\n      ,[pl_Created_timestamp]\n      ,[pl_created_datetime_UTC]\n  FROM [land].[pipeline_activity_log]\n  where [pl_category] = 'people' and [pl_status]  = 1 and pl_load_type = 'delta'\n  order by [pl_log_id] desc ",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_src_land_sql_log",
											"type": "DatasetReference"
										},
										"firstRowOnly": true
									}
								},
								{
									"name": "delta_people_start_timestamp",
									"description": "last success load plus 1 second as new load start.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "delta_people_start_datetime",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_m_start_delta_people_timestamp",
										"value": {
											"value": "@string(\nactivity('lkp_last_success_load_people').output.firstRow.pl_load_until_timestamp\n)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Execute delta load survey",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "delta_survey_start_timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_delighted_delta_survey",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_src_endpoint": {
												"value": "@concat(pipeline().parameters.par_m_init_endpoint\n,'survey_responses.json/'\n)",
												"type": "Expression"
											},
											"receiver": {
												"value": "@pipeline().parameters.par_m_receiver",
												"type": "Expression"
											},
											"cc": {
												"value": "@pipeline().parameters.par_m_cc",
												"type": "Expression"
											},
											"par_c1_start_delta_survey_timestamp": {
												"value": "@variables('var_m_start_delta_survey_timestamp')",
												"type": "Expression"
											},
											"par_c1_start_delta_survey_datetime": {
												"value": "@variables('var_m_start_delta_survey_datetime')",
												"type": "Expression"
											},
											"par_api_key": {
												"value": "@variables('var_m_API-Key')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "delta_survey_start_datetime",
									"description": "last success load plus 1 second as new load start.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "lkp_last_success_load_survey",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_m_start_delta_survey_datetime",
										"value": {
											"value": "@string(activity('lkp_last_success_load_survey').output.firstRow.pl_load_until_datetime_UTC)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "delta_people_start_datetime",
									"description": "last success load plus 1 second as new load start.",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "lkp_last_success_load_people",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_m_start_delta_people_datetime",
										"value": {
											"value": "@string(activity('lkp_last_success_load_people').output.firstRow.pl_load_until_datetime_UTC)\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Execute delta load people",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "delta_people_start_timestamp",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_delighted_delta_People",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_init_endpoint": {
												"value": "@concat(pipeline().parameters.par_m_init_endpoint\n,'people.json/'\n)",
												"type": "Expression"
											},
											"receiver": {
												"value": "@pipeline().parameters.par_m_receiver",
												"type": "Expression"
											},
											"cc": {
												"value": "@pipeline().parameters.par_m_cc",
												"type": "Expression"
											},
											"par_c1_start_delta_people_timestamp": {
												"value": "@variables('var_m_start_delta_people_timestamp')",
												"type": "Expression"
											},
											"par_c1_start_delta_people_datetime": {
												"value": "@variables('var_m_start_delta_people_datetime')",
												"type": "Expression"
											},
											"par_p_API_Key": {
												"value": "@variables('var_m_API-Key')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "combine_survey_pages",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Execute delta load survey",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "insert into [dbo].[surveyRaw] ([surveyRaw])\n                 select string_agg([surveybody], '<<<--->>>') within group (order by [surveytemp_id]) as  surveyRaw\n                           from  [dbo].[surveytemp]  ;\n\nupdate   [dbo].[surveyRaw]    set [surveyRaw] = REPLACE ([surveyRaw], ']<<<--->>>[',',') ;\n\n truncate table  [dbo].[surveytemp];\nselect 1;\n\n",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_src_land_sql_log",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "combine_people_pages",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Execute delta load people",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "insert into  [dbo].[peopleRaw]  ([peopleRaw]) \n   select string_agg( [peoplebody],'<<<--->>>') within group (order by [peopletemp_id]) as peopleRaw  from   [dbo].[peopletemp];\n\nupdate [dbo].[peopleRaw]  set [peopleRaw] = REPLACE ([peopleRaw], ']<<<--->>>[',',');\n\n\ntruncate table  [dbo].[peopletemp];\nselect 1;\n\n\n\n ",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_src_land_sql_log",
											"type": "DatasetReference"
										}
									}
								},
								{
									"name": "flatten_people_copy1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "combine_survey_pages",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[land].[udsp_flatten_survey_people]"
									},
									"linkedServiceName": {
										"referenceName": "[parameters('ls_azure_sqldb')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "combine_people_pages",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					},
					{
						"name": "Saving API-Key",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "API_Key",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_m_API-Key",
							"value": {
								"value": "@activity('API_Key').output.value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "API_Key",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://kv-wildfork-nonprod.vault.azure.net/secrets/delighted-apikey/177d9c82363448c7a5b3a7da1714a128?api-version=7.0",
							"method": "GET",
							"authentication": {
								"type": "MSI",
								"resource": "https://vault.azure.net"
							}
						}
					},
					{
						"name": "delta survey Success notice",
						"description": "successful lod survey notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "check_load_type_Is_delta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-00.canadacentral.logic.azure.com:443/workflows/e08a5efe1c714c62950f71fff3290381/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=7KWIblzVG-FWqD00-WOS3-3GIswFQcOVeTu6Jiqmf8A ",
							"method": "POST",
							"body": {
								"value": "{\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"message\" : \"The delta dumping survey from delighted is success at @{convertFromUtc(utcnow(),'eastern standard time')}\",\n    \"pipelineName\" :\"@{pipeline().Pipeline}\", \n    \"receiver\" : \"@{pipeline().parameters.par_m_receiver}\",\n    \"cc\":\"@{pipeline().parameters.par_m_cc}\",\n    \"subject\" : \"No-Reply: The survey Data delta dumping success.\"\n   }",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delta survey Faiure notice",
						"description": "successful lod survey notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "check_load_type_Is_delta",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-00.canadacentral.logic.azure.com:443/workflows/e08a5efe1c714c62950f71fff3290381/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=7KWIblzVG-FWqD00-WOS3-3GIswFQcOVeTu6Jiqmf8A ",
							"method": "POST",
							"body": {
								"value": "{\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"message\" : \"The delta dumping survey from delighted faild at @{convertFromUtc(utcNow(),'eastern standard time')}\",\n    \"pipelineName\" :\"@{pipeline().Pipeline}\", \n    \"receiver\" : \"@{pipeline().parameters.par_m_receiver}\",\n    \"cc\":\"@{pipeline().parameters.par_m_cc}\",\n    \"subject\" : \"No-Reply: The survey Data delta dumping failed.\"\n   }",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"is_delta_load": {
						"type": "string",
						"defaultValue": "y"
					},
					"par_m_start_date": {
						"type": "string",
						"defaultValue": "2023-01-01"
					},
					"par_m_until_date": {
						"type": "string",
						"defaultValue": "2023-01-07"
					},
					"par_m_receiver": {
						"type": "string",
						"defaultValue": "chenerjun@live.com"
					},
					"par_m_cc": {
						"type": "string",
						"defaultValue": "erjun.chen@xxxx.ca,echen@jbssa.com"
					},
					"par_m_init_endpoint": {
						"type": "string",
						"defaultValue": "https://api.delighted.com/v1/"
					}
				},
				"variables": {
					"var_m_API-Key": {
						"type": "String"
					},
					"var_m_period_start_people_timestamp": {
						"type": "String",
						"defaultValue": "1672531200"
					},
					"var_m_period_until_people_timestamp": {
						"type": "String",
						"defaultValue": "1672531201"
					},
					"var_m_start_delta_people_timestamp": {
						"type": "String",
						"defaultValue": "1672531200"
					},
					"var_m_until_delta_people_timestamp": {
						"type": "String",
						"defaultValue": "1672531200"
					},
					"var_m_last_period_people_datetime": {
						"type": "String",
						"defaultValue": "2023-01-01"
					},
					"var_m_last_period_people_timestamp": {
						"type": "String",
						"defaultValue": "1672531200"
					},
					"var_m_last_delta_people_datetime": {
						"type": "String",
						"defaultValue": "2023-01-01"
					},
					"var_m_last_delta_people_timestamp": {
						"type": "String",
						"defaultValue": "1672531200"
					},
					"var_m_period_start_survey_timestamp": {
						"type": "String",
						"defaultValue": "1672531200"
					},
					"var_m_period_until_survey_timestamp": {
						"type": "String",
						"defaultValue": "1672531200"
					},
					"var_m_start_delta_survey_timestamp": {
						"type": "String",
						"defaultValue": "1672531200"
					},
					"var_m_until_delta_survey_timestamp": {
						"type": "String",
						"defaultValue": "1672531200"
					},
					"var_m_last_period_survey_datetime": {
						"type": "String",
						"defaultValue": "2023-01-01"
					},
					"var_m_last_period_survey_timestamp": {
						"type": "String",
						"defaultValue": "1672531201"
					},
					"var_m_last_delta_survey_datetime": {
						"type": "String",
						"defaultValue": "2023-01-01"
					},
					"var_m_last_delta_survey_timestamp": {
						"type": "String",
						"defaultValue": "1672531200"
					},
					"var_m_start_delta_survey_datetime": {
						"type": "String",
						"defaultValue": "2023-01-01"
					},
					"var_m_period_start_survey_datetime": {
						"type": "String",
						"defaultValue": "2023-01-01"
					},
					"var_m_start_delta_people_datetime": {
						"type": "String"
					},
					"var_m_period_start_people_datetime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "WWF/land"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_delighted_period_survey')]",
				"[concat(variables('factoryId'), '/pipelines/pl_delighted_period_People')]",
				"[concat(variables('factoryId'), '/datasets/ds_src_land_sql_log')]",
				"[concat(variables('factoryId'), '/pipelines/pl_delighted_delta_survey')]",
				"[concat(variables('factoryId'), '/pipelines/pl_delighted_delta_People')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_delighted_period_survey')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Listing survey responses from delighted rest api",
				"activities": [
					{
						"name": "Log_priod_load_survey_Success",
						"description": "log pipeline activity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "loop_page_period_survey",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[land].[udsp_logpipeline]",
							"storedProcedureParameters": {
								"pl_category": {
									"value": "survey",
									"type": "String"
								},
								"pl_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"adf_name": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_status": {
									"value": "1",
									"type": "Int32"
								},
								"pl_load_type": {
									"value": "period",
									"type": "String"
								},
								"pl_load_start_date": {
									"value": {
										"value": "@pipeline().parameters.par_ps_src_start_date",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_load_until_date": {
									"value": {
										"value": "@pipeline().parameters.par_ps_src_until_date",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_azure_sqldb')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log_priod_load_survey_failed",
						"description": "log pipeline activity failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "loop_page_period_survey",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[land].[udsp_logpipeline]",
							"storedProcedureParameters": {
								"pl_category": {
									"value": "survey",
									"type": "String"
								},
								"pl_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"adf_name": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_status": {
									"value": "0",
									"type": "Int32"
								},
								"pl_load_type": {
									"value": "period",
									"type": "String"
								},
								"pl_load_start_date": {
									"value": {
										"value": "@pipeline().parameters.par_ps_src_start_date",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_load_until_date": {
									"value": {
										"value": "@pipeline().parameters.par_ps_src_until_date",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_azure_sqldb')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "period_Survey_Success notice",
						"description": "successful lod survey notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Log_priod_load_survey_Success",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-00.canadacentral.logic.azure.com:443/workflows/e08a5efe1c714c62950f71fff3290381/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=7KWIblzVG-FWqD00-WOS3-3GIswFQcOVeTu6Jiqmf8A ",
							"method": "POST",
							"body": {
								"value": "{\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"message\" : \"The periodical dumping survey answer from delighted processing is success at @{convertFromUtc(utcnow(),'eastern standard time')}\",\n    \"pipelineName\" : \"@{pipeline().Pipeline}\", \n    \"receiver\" : \"@{pipeline().parameters.par_ps_receiver}\" ,\n    \"cc\":\"@{pipeline().parameters.par_ps_cc}\",\n    \"subject\" : \"No-Reply: The survey Data periodical dumping success.\"\n   }",
								"type": "Expression"
							}
						}
					},
					{
						"name": "period_Survey Faiure notice",
						"description": "successful lod survey notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Log_priod_load_survey_failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-00.canadacentral.logic.azure.com:443/workflows/e08a5efe1c714c62950f71fff3290381/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=7KWIblzVG-FWqD00-WOS3-3GIswFQcOVeTu6Jiqmf8A ",
							"method": "POST",
							"body": {
								"value": "{\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"message\" : \"The periodical dumping survey answer from delighted processing failed at @{convertFromUtc(utcnow(),'eastern standard time')}\",\n    \"pipelineName\" : \"@{pipeline().Pipeline}\", \n    \"receiver\" : \"@{pipeline().parameters.par_ps_receiver}\" ,\n    \"cc\":\"@{pipeline().parameters.par_ps_cc}\",\n    \"subject\" : \"No-Reply: The survey Data periodical dumping failed.\"\n   }",
								"type": "Expression"
							}
						}
					},
					{
						"name": "initial_var_api_pagination",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_period_survey_api_pagination",
							"value": "1"
						}
					},
					{
						"name": "loop_page_period_survey",
						"description": "loop load period survey answer",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "initial_var_api_pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(\r\n    variables('var_period_survey_api_pagination')\r\n    ,'0'\r\n)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "period_load_survey_response",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat(\n    pipeline().parameters.par_ps_src_endpoint\n    ,'survey_responses.json'\n    ,'?since=',variables('var_period_survey_start_timestamp')\n    ,'&until=',variables('var_period_survey_until_timestamp')\n    ,'&page=',variables('var_period_survey_api_pagination')\n)",
											"type": "Expression"
										},
										"method": "GET",
										"authentication": {
											"type": "Basic",
											"username": {
												"value": "@pipeline().parameters.par_ps_API_Key",
												"type": "Expression"
											},
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "[parameters('ls_fusedata_AzureKeyVault')]",
													"type": "LinkedServiceReference"
												},
												"secretName": "Delighted"
											}
										}
									}
								},
								{
									"name": "failed_stop_loop",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "period_load_survey_response",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_period_survey_api_pagination",
										"value": "0"
									}
								},
								{
									"name": "is_it_no_more_page",
									"description": "check to see if has more pages",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "period_load_survey_response",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(\nvariables('var_period_survey_api_pagination')\n, '0')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "store_period_survey_response",
												"description": "store_period_survey to table",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[udsp_insert_surveytemp]",
													"storedProcedureParameters": {
														"r": {
															"value": {
																"value": "@activity('period_load_survey_response').output.Response",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "[parameters('ls_azure_sqldb')]",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "move_pagination_to_bridge",
												"description": "move_pagination_to_bridge to updating it",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "store_period_survey_response",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_period_bridge",
													"value": {
														"value": "@variables('var_period_survey_api_pagination')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "update_pagination",
												"description": "update_pagination",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "move_pagination_to_bridge",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_period_survey_api_pagination",
													"value": {
														"value": "@string(add(int(variables('var_period_bridge')),1))",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "no_page_stop_loop_period_surver",
												"description": "no_more page,\nstop_loop_period_surver",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_period_survey_api_pagination",
													"value": "0"
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"parameters": {
					"par_ps_src_start_date": {
						"type": "string",
						"defaultValue": "2023-01-01"
					},
					"par_ps_src_until_date": {
						"type": "string",
						"defaultValue": "2023-01-07"
					},
					"par_ps_src_endpoint": {
						"type": "string",
						"defaultValue": "https://api.delighted.com/v1/survey_responses.json"
					},
					"par_ps_receiver": {
						"type": "string",
						"defaultValue": "chenerjun@gmail.com"
					},
					"par_ps_cc": {
						"type": "string",
						"defaultValue": "erjun.chen@teamfuse.ca,echen@jbssa.com"
					},
					"par_ps_API_Key": {
						"type": "string"
					}
				},
				"variables": {
					"var_period_survey_api_pagination": {
						"type": "String",
						"defaultValue": "1"
					},
					"var_period_survey_start_timestamp": {
						"type": "String"
					},
					"var_period_survey_until_timestamp": {
						"type": "String"
					},
					"var_period_API-Key": {
						"type": "String"
					},
					"var_period_bridge": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "WWF/land"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_delighted_period_People')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "initial_endpoint",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_endpoint",
							"value": {
								"value": "@pipeline().parameters.par_init_endpoint",
								"type": "Expression"
							}
						}
					},
					{
						"name": "loop_list_people_period",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "initial_endpoint",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('var_endpoint'), 'stop')\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "list_people",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat(variables('var_endpoint'),'?'\n, 'since=', pipeline().parameters.par_p_start_delat_people_timestamp\n, '&until=', string(div(sub(ticks(utcNow()), ticks('1970-01-01')),10000000))\n)",
											"type": "Expression"
										},
										"method": "GET",
										"authentication": {
											"type": "Basic",
											"username": {
												"value": "@pipeline().parameters.par_p_API_Key",
												"type": "Expression"
											},
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "[parameters('ls_fusedata_AzureKeyVault')]",
													"type": "LinkedServiceReference"
												},
												"secretName": "Delighted"
											}
										}
									}
								},
								{
									"name": "Stored_response_to_tb",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "list_people",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[udsp_insert_peopletemp]",
										"storedProcedureParameters": {
											"r": {
												"value": {
													"value": "@activity('list_people').output.Response",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "[parameters('ls_azure_sqldb')]",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "reset_endpoint",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "list_people",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_endpoint",
										"value": "stop"
									}
								},
								{
									"name": "does head has link",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "list_people",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(\n    activity('list_people').output.ADFWebActivityResponseHeaders\n    ,'Link'\n)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "reset_endpoint_to_stop_loop",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_endpoint",
													"value": "stop"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "get_response_header",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "response_header",
													"value": {
														"value": "@activity('list_people').output.ADFWebActivityResponseHeaders.Link",
														"type": "Expression"
													}
												}
											},
											{
												"name": "update_endpoint",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "get_response_header",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_endpoint",
													"value": {
														"value": "@substring(variables('response_header'),1\n,sub(length(variables('response_header')),14)\n)\n ",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "log delta people success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "loop_list_people_period",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[land].[udsp_logpipeline]",
							"storedProcedureParameters": {
								"adf_name": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_category": {
									"value": "people",
									"type": "String"
								},
								"pl_load_start_date": {
									"value": {
										"value": "@pipeline().parameters.par_p_start_delta_people_datetime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pl_load_type": {
									"value": "delta",
									"type": "String"
								},
								"pl_load_until_date": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pl_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_status": {
									"value": "1",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_azure_sqldb')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "log delta people faild",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "loop_list_people_period",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[land].[udsp_logpipeline]",
							"storedProcedureParameters": {
								"adf_name": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_category": {
									"value": "people",
									"type": "String"
								},
								"pl_load_start_date": {
									"value": "2023-01-01",
									"type": "DateTime"
								},
								"pl_load_type": {
									"value": "delta",
									"type": "String"
								},
								"pl_load_until_date": {
									"value": "2023-01-07",
									"type": "DateTime"
								},
								"pl_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_status": {
									"value": "0",
									"type": "Boolean"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_azure_sqldb')]",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"par_init_endpoint": {
						"type": "string",
						"defaultValue": "https://api.delighted.com/v1/"
					},
					"receiver": {
						"type": "string",
						"defaultValue": "chenerjun@live.com"
					},
					"cc": {
						"type": "string",
						"defaultValue": "erjun.chen@teamfuse.ca,echen@jbssa.com"
					},
					"par_p_start_delat_people_timestamp": {
						"type": "string",
						"defaultValue": "1672549200"
					},
					"par_p_start_delta_people_datetime": {
						"type": "string",
						"defaultValue": "2023-01-01"
					},
					"par_p_API_Key": {
						"type": "string",
						"defaultValue": "j9HsbUD0W8zhN14uoKv2HfIO7JIlxXzJ"
					}
				},
				"variables": {
					"response_body": {
						"type": "String"
					},
					"response_header": {
						"type": "String"
					},
					"var_endpoint": {
						"type": "String"
					}
				},
				"folder": {
					"name": "WWF/land"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_src_land_sql_log')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('ls_azure_sqldb')]",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "WWF/land/src"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "pl_log_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "pl_category",
						"type": "varchar"
					},
					{
						"name": "pl_name",
						"type": "varchar"
					},
					{
						"name": "pl_status",
						"type": "bit"
					},
					{
						"name": "pl_update_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "pl_create_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "land",
					"table": "pipeline_activity_log"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_delighted_delta_survey')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Listing survey responses from delighted rest api",
				"activities": [
					{
						"name": "initial_var_survey_pagination",
						"description": "reset Var_API_Pagination to 1 default",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_delta_survey_pagination",
							"value": {
								"value": "1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "loop_page_delta_survey",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "initial_var_survey_pagination",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('var_delta_survey_pagination')\n, '0'\n)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "is_it_no_more_page",
									"description": "check whether it has more page or not",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "delta_survey",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('delta_survey').output.Response,'[]')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "update_pagination",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "move_to_var_bridge",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_delta_survey_pagination",
													"value": {
														"value": "@string(add(int(variables('var_bridge')),1))",
														"type": "Expression"
													}
												}
											},
											{
												"name": "move_to_var_bridge",
												"description": "bridge var",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "save_survey_answer",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_bridge",
													"value": {
														"value": "@variables('var_delta_survey_pagination')",
														"type": "Expression"
													}
												}
											},
											{
												"name": "save_survey_answer",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[udsp_insert_surveytemp]",
													"storedProcedureParameters": {
														"r": {
															"value": {
																"value": "@replace(\t\n\t\t\treplace(\n\t\t\t\t\treplace(\n\t\t\t\t\t\treplace(\n\t\t\t\t\t\t\treplace(activity('delta_survey').output.Response,'\\\"\"\"','')\n\t\t\t\t\t\t, '\"\\\"\"', '')\n\t\t\t\t\t,'[\\'  ,'[')\n\t\t\t\t,'\\\"\"]\"\"\"',']'\n\t\t\t)\n\t\t,'\\\"','')",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "[parameters('ls_azure_sqldb')]",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "no_page_stop_loop",
												"description": "update var_api_pagination to stop loop",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_delta_survey_pagination",
													"value": {
														"value": "0",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "delta_survey",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat(pipeline().parameters.par_src_endpoint\n,'?since=',pipeline().parameters.par_c1_start_delta_survey_timestamp\n,'&until=',string(div(sub(ticks(utcNow()), ticks('1970-01-01')),10000000))\n,'&page=',variables('var_delta_survey_pagination')\n)",
											"type": "Expression"
										},
										"method": "GET",
										"authentication": {
											"type": "Basic",
											"username": {
												"value": "@pipeline().parameters.par_api_key",
												"type": "Expression"
											},
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "[parameters('ls_fusedata_AzureKeyVault')]",
													"type": "LinkedServiceReference"
												},
												"secretName": "Delighted"
											}
										}
									}
								},
								{
									"name": "failed_stop_loop",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "delta_survey",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_delta_survey_pagination",
										"value": "0"
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Log delta survey Success",
						"description": "log pipeline activity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "loop_page_delta_survey",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[land].[udsp_logpipeline]",
							"storedProcedureParameters": {
								"adf_name": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_category": {
									"value": "survey",
									"type": "String"
								},
								"pl_load_start_date": {
									"value": {
										"value": "@pipeline().parameters.par_c1_start_delta_survey_datetime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pl_load_type": {
									"value": "delta",
									"type": "String"
								},
								"pl_load_until_date": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pl_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_status": {
									"value": "1",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_azure_sqldb')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Log delta survey failed",
						"description": "log pipeline activity failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "loop_page_delta_survey",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[land].[udsp_logpipeline]",
							"storedProcedureParameters": {
								"pl_category": {
									"value": "survey",
									"type": "String"
								},
								"pl_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"adf_name": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_status": {
									"value": "0",
									"type": "Int32"
								},
								"pl_load_type": {
									"value": "delta",
									"type": "String"
								},
								"pl_load_start_date": {
									"value": {
										"value": "@pipeline().parameters.par_c1_start_delta_survey_datetime",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_load_until_date": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_azure_sqldb')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "delta survey Faiure notice",
						"description": "successful lod survey notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Log delta survey failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-00.canadacentral.logic.azure.com:443/workflows/e08a5efe1c714c62950f71fff3290381/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=7KWIblzVG-FWqD00-WOS3-3GIswFQcOVeTu6Jiqmf8A ",
							"method": "POST",
							"body": {
								"value": "{\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"message\" : \"The delta dumping survey answer from delighted processing failed at @{convertFromUtc(utcnow(),'eastern standard time')}\",\n    \"pipelineName\" : \"@{pipeline().Pipeline}\", \n    \"receiver\" : \"@{pipeline().parameters.receiver}\" ,\n    \"cc\":\"@{pipeline().parameters.cc}\",\n    \"subject\" : \"No-Reply: The survey Data delta dumping failed.\"\n   }",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"par_src_endpoint": {
						"type": "string",
						"defaultValue": "https://api.delighted.com/v1/"
					},
					"receiver": {
						"type": "string",
						"defaultValue": "chenerjun@live.com"
					},
					"cc": {
						"type": "string",
						"defaultValue": "erjun.chen@teamfus.ca,echen@jbssa.com"
					},
					"par_c1_start_delta_survey_timestamp": {
						"type": "string"
					},
					"par_c1_start_delta_survey_datetime": {
						"type": "string"
					},
					"par_api_key": {
						"type": "string"
					}
				},
				"variables": {
					"var_start_timestamp_delta_survey": {
						"type": "String"
					},
					"var_until_timestamp_delta_survey": {
						"type": "String"
					},
					"var_delta_API-Key": {
						"type": "String"
					},
					"var_delta_survey_pagination": {
						"type": "String",
						"defaultValue": "1"
					},
					"var_bridge": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "WWF/land"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_delighted_delta_People')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "initial_endpoint",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_endpoint",
							"value": {
								"value": "@pipeline().parameters.par_init_endpoint",
								"type": "Expression"
							}
						}
					},
					{
						"name": "loop_list_people_period",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "initial_endpoint",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('var_endpoint'), 'stop')\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "list_people",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@concat(variables('var_endpoint'),'?'\n, 'since=', pipeline().parameters.par_c1_start_delta_people_timestamp\n)",
											"type": "Expression"
										},
										"method": "GET",
										"authentication": {
											"type": "Basic",
											"username": {
												"value": "@pipeline().parameters.par_p_API_Key",
												"type": "Expression"
											},
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "[parameters('ls_fusedata_AzureKeyVault')]",
													"type": "LinkedServiceReference"
												},
												"secretName": "Delighted"
											}
										}
									}
								},
								{
									"name": "reset_endpoint",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "list_people",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_endpoint",
										"value": "stop"
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "list_people",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@contains(activity('list_people').output.ADFWebActivityResponseHeaders\r\n,'Link'\r\n)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "reset_endpoint_to_stop_loop",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_endpoint",
													"value": "stop"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "get_response_header",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "response_header",
													"value": {
														"value": "@activity('list_people').output.ADFWebActivityResponseHeaders.Link",
														"type": "Expression"
													}
												}
											},
											{
												"name": "update_endpoint",
												"type": "SetVariable",
												"dependsOn": [
													{
														"activity": "get_response_header",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_endpoint",
													"value": {
														"value": "@substring(variables('response_header'),1\n,sub(length(variables('response_header')),14)\n)\n ",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "is_respone_empty",
									"description": "check to see if response empty",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "list_people",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(activity('list_people').output.Response\n,'[]'\n)\n",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Stored_response_to_tb",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[udsp_insert_peopletemp]",
													"storedProcedureParameters": {
														"r": {
															"value": {
																"value": "@replace(\n   activity('list_people').output.Response\n    ,'\\\"','')",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "[parameters('ls_azure_sqldb')]",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "reset_endpoint_copy1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "var_endpoint",
													"value": "stop"
												}
											}
										]
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "log_delta_people_success",
						"description": "log_delta_people_success",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "loop_list_people_period",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[land].[udsp_logpipeline]",
							"storedProcedureParameters": {
								"adf_name": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_category": {
									"value": "people",
									"type": "String"
								},
								"pl_load_start_date": {
									"value": {
										"value": "@pipeline().parameters.par_c1_start_delta_people_datetime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pl_load_type": {
									"value": "delta",
									"type": "String"
								},
								"pl_load_until_date": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pl_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_status": {
									"value": "1",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_azure_sqldb')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "log_delta_people_failed",
						"description": "log_delta_people_failed",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "loop_list_people_period",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[land].[udsp_logpipeline]",
							"storedProcedureParameters": {
								"adf_name": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_category": {
									"value": "people",
									"type": "String"
								},
								"pl_load_start_date": {
									"value": {
										"value": "@pipeline().parameters.par_c1_start_delta_people_datetime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pl_load_type": {
									"value": "delta",
									"type": "String"
								},
								"pl_load_until_date": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pl_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pl_status": {
									"value": "0",
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "[parameters('ls_azure_sqldb')]",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "delta survey Faiure notice",
						"description": "successful lod survey notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "log_delta_people_failed",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-00.canadacentral.logic.azure.com:443/workflows/e08a5efe1c714c62950f71fff3290381/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=7KWIblzVG-FWqD00-WOS3-3GIswFQcOVeTu6Jiqmf8A ",
							"method": "POST",
							"body": {
								"value": "{\n    \"dataFactoryName\" : \"@{pipeline().DataFactory}\", \n    \"message\" : \"The delta dumping people from delighted failed at @{convertFromUtc(utcNow(),'eastern standard time')}\",\n    \"pipelineName\" : \"@{pipeline().Pipeline}\", \n    \"receiver\" : \"@{pipeline().parameters.receiver}\" ,\n    \"cc\":\"@{pipeline().parameters.cc}\",\n    \"subject\" : \"No-Reply: The survey Data delta dumping failed.\"\n   }",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"par_init_endpoint": {
						"type": "string",
						"defaultValue": "https://api.delighted.com/v1/people.json"
					},
					"receiver": {
						"type": "string",
						"defaultValue": "chenerjun@live.com"
					},
					"cc": {
						"type": "string",
						"defaultValue": "erjun.chen@teamfuse.ca,echen@jbssa.com"
					},
					"par_c1_start_delta_people_timestamp": {
						"type": "string",
						"defaultValue": "1672549200"
					},
					"par_c1_start_delta_people_datetime": {
						"type": "string",
						"defaultValue": "2023-01-01"
					},
					"par_p_API_Key": {
						"type": "string",
						"defaultValue": "j9HsbUD0W8zhN14uoKv2HfIO7JIlxXzJ"
					}
				},
				"variables": {
					"response_body": {
						"type": "String"
					},
					"response_header": {
						"type": "String"
					},
					"var_endpoint": {
						"type": "String"
					},
					"var_start_timestamp_delta_people": {
						"type": "String"
					},
					"var_until_timestamp_delta_people": {
						"type": "String"
					},
					"var_delta_API-Key": {
						"type": "String"
					},
					"var_delta_people_API_pagination": {
						"type": "String",
						"defaultValue": "1"
					},
					"var_bridge_people": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "WWF/land"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}